{
	"Serial | Library": true,
    "EEPROM | Library": true,
    "Esplora | Library": true,
    "Ethernet | Library": true,
    "Firmata | Library": true,
    "GSM | Library": true,
    "LiquidCrystal_I2C | Library": true,
    "Robot_Control | Library": true,
    "Robot_Motor | Library": true,
    "SD | Library": true,
    "SPI | Library": true,
    "Servo | Library": true,
    "SoftwareSerial | Library": true,
    "Stepper | Library": true,
    "TFT | Library": true,
    "WiFi | Library": true,
    "Wire | Library": true,
    "setup | Syntax: setup()": true,
    "loop | Syntax: loop()": true,
    "if | Syntax: if (conditional) and ==, !=, <, > (comparison operators)": true, 
    "else | Syntax: include after if {}": true,
    "for | Syntax: for (initialization; condition; increment)": true,
    "switch | Syntax: switch (var) {case label: //code here; break; default: //code here": true, 
    "while | Syntax: while(expression){ //statement(s) }": true,
    "do | Syntax: do { statement(s); } while(condition);": true,
    "break | Syntax: break;": true,
    "continue | Syntax: continue;": true,
    "return | Syntax: return;, return(value);": true,
    "goto | Syntax: label: //your code here; goto label;": true,
    "true | Syntax: true;, true()": true,
    "false | Syntax: false;, false()": true,
    "void | Syntax: void;, void(params);": true,
    "boolean | Syntax: boolean variable;": true,
    "char | Syntax: char variable;, char() var;": true,
    "byte | Syntax: byte variable;": true,
    "int | Syntax: int var;": true,
    "unsigned long | Syntax: unsigned long variable;": true,
    "unsigned int | Syntax: unsigned int variable;": true,
    "unsigned | Syntax: unsigned 'typeOfVariable' variable;": true,
    "word | Syntax: word variable;": true,
    "print | Syntax: print(string);, print(variable)": true,
    "println | Syntax println(string);, println(variable): ": true,
    "long | Syntax: long var = val;": true,
    "short | Syntax: short var = val;": true,
    "float | Syntax: float var = val;": true,
    "double | Syntax: double var = val;": true,
    "volatile | Syntax: volatile var = val;": true,
    "const | Syntax: const var = val;": true,
    "sizeof | Syntax: sizeof(variable)": true,
    "pinMode | Syntax: pinMode(pin, mode);": true,
    "digitalWrite | Syntax: digitalWrite(pin, value);": true,
    "digitalRead | Syntax: digitalRead(pin);": true,
    "analogReference | Syntax: analogReference(type);": true,
    "analogRead | Syntax: analogRead(pin);": true,
    "analogWrite | Syntax: analogWrite(pin, value);": true,
    "tone | Syntax: tone(pin, frequency);, tone(pin, frequency, duration);": true,
    "noTone | Syntax: noTone(pin);": true,
    "shiftOut | Syntax: shiftOut(dataPin, clockPin, bitOrder, value);": true,
    "shiftIn | Syntax: byte incoming = shiftIn(dataPin, clockPin, bitOrder);": true,
    "pulseIn | Syntax: pulseIn(pin, value);, pulseIn(pin, value, timeout);": true,
    "millis | Syntax: millis();": true,
    "micros | Syntax: micros();": true,
    "delay | Syntax: delay(milliSeconds);": true,
    "delayMicroseconds | Syntax: delayMicroseconds(us);": true,
    "min | Syntax: min(x, y);": true,
    "max | Syntax: max(x, y);": true,
    "abs | Syntax: abs(var);": true,
    "constrain | Syntax: constrain(x, a, b);": true,
    "map | Syntax: map(value, fromLow, fromHigh, toLow, toHigh);": true,
    "pow | Syntax: pow(base, exponent);": true,
    "sqrt | Syntax: sqrt(x);": true,
    "sin | Syntax: sin(rad);": true,
    "cos | Syntax: cos(rad);": true,
    "tan | Syntax: tan(rad);": true,
    "randomSeed | Syntax: randomSeed(seed);": true,
    "random | Syntax: random(max);, random(min, max);": true,
    "lowByte | Syntax: lowByte(x);": true,
    "highByte | Syntax: highByte(x);": true,
    "bitRead | Syntax: bitRead(x);": true,
    "bitWrite | Syntax: bitWrite(x);": true,
    "bitSet | Syntax: bitSet(x, n);": true,
    "bitClear | Syntax: bitClear(x, n);": true,
    "bit | Syntax: bit(n);": true,
    "attach | Syntax: ": true,
    "write | Syntax: ": true,
    "attachInterrupt | Syntax: attachInterrupt(interrupt, ISR, mode);": true,
    "detachInterrupt | Syntax: detachInterrupt(interrupt);": true,
    "interrupts | Syntax: interrupts();": true,
    "noInterrupts | Syntax: noInterrupts();": true,
    "begin | begin(speed, config)":true,
    "HIGH | Keyoword" : true,
    "LOW | Keyoword": true

}